(function(root,factory){if(root===null){throw new Error("Google-maps package can be used only in browser")}if(typeof define==="function"&&define.amd){define(factory)}else if(typeof exports==="object"){module.exports=factory()}else{root.GoogleMapsLoader=factory()}})(typeof window!=="undefined"?window:null,function(){"use strict";var GoogleMapsLoader={};GoogleMapsLoader.URL="https://maps.googleapis.com/maps/api/js";GoogleMapsLoader.KEY=null;GoogleMapsLoader.LIBRARIES=[];GoogleMapsLoader.CLIENT=null;GoogleMapsLoader.CHANNEL=null;GoogleMapsLoader.SENSOR=null;GoogleMapsLoader._VERSION="3.18";GoogleMapsLoader.VERSION=GoogleMapsLoader._VERSION;GoogleMapsLoader.WINDOW_CALLBACK_NAME="__google_maps_api_provider_initializator__";GoogleMapsLoader.script=null;GoogleMapsLoader.google=null;GoogleMapsLoader.loading=false;GoogleMapsLoader.callbacks=[];GoogleMapsLoader.onLoadEvents=[];GoogleMapsLoader.load=function(fn){if(GoogleMapsLoader.google===null){if(GoogleMapsLoader.loading===true){if(fn){GoogleMapsLoader.callbacks.push(fn)}}else{GoogleMapsLoader.loading=true;window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]=function(){GoogleMapsLoader._ready(fn)};GoogleMapsLoader.script=document.createElement("script");GoogleMapsLoader.script.type="text/javascript";GoogleMapsLoader.script.src=GoogleMapsLoader.createUrl();document.body.appendChild(GoogleMapsLoader.script)}}else if(fn){fn(GoogleMapsLoader.google)}var promiseError=function(){throw new Error("Using promises is not supported anymore. Please take a look in new documentation and use callback instead.")};return{then:promiseError,"catch":promiseError,fail:promiseError}};GoogleMapsLoader.createUrl=function(){var url=GoogleMapsLoader.URL;if(GoogleMapsLoader.SENSOR===true||GoogleMapsLoader.SENSOR==="true"){url+="?sensor=true"}else{url+="?sensor=false"}if(GoogleMapsLoader.KEY){url+="&key="+GoogleMapsLoader.KEY}if(GoogleMapsLoader.LIBRARIES.length>0){url+="&libraries="+GoogleMapsLoader.LIBRARIES.join(",")}if(GoogleMapsLoader.CLIENT){url+="&client="+GoogleMapsLoader.CLIENT+"&v="+GoogleMapsLoader.VERSION}if(GoogleMapsLoader.CHANNEL){url+="&channel="+GoogleMapsLoader.CHANNEL}url+="&callback="+GoogleMapsLoader.WINDOW_CALLBACK_NAME;return url};GoogleMapsLoader.release=function(fn){var _release=function(){GoogleMapsLoader.KEY=null;GoogleMapsLoader.LIBRARIES=[];GoogleMapsLoader.CLIENT=null;GoogleMapsLoader.SENSOR=false;GoogleMapsLoader.VERSION=GoogleMapsLoader._VERSION;GoogleMapsLoader.google=null;GoogleMapsLoader.loading=false;GoogleMapsLoader.callbacks=[];GoogleMapsLoader.onLoadEvents=[];if(typeof window.google!=="undefined"){delete window.google}if(typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]!=="undefined"){delete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]}if(GoogleMapsLoader.script!==null){GoogleMapsLoader.script.parentElement.removeChild(GoogleMapsLoader.script);GoogleMapsLoader.script=null}fn()};if(GoogleMapsLoader.loading){GoogleMapsLoader.load(function(){_release()})}else{_release()}};GoogleMapsLoader.onLoad=function(fn){GoogleMapsLoader.onLoadEvents.push(fn)};GoogleMapsLoader._ready=function(fn){var i;GoogleMapsLoader.loading=false;if(GoogleMapsLoader.google===null){GoogleMapsLoader.google=window.google}for(i=0;i<GoogleMapsLoader.onLoadEvents.length;i++){GoogleMapsLoader.onLoadEvents[i](GoogleMapsLoader.google)}if(fn){fn(GoogleMapsLoader.google)}for(i=0;i<GoogleMapsLoader.callbacks.length;i++){GoogleMapsLoader.callbacks[i](GoogleMapsLoader.google)}GoogleMapsLoader.callbacks=[]};return GoogleMapsLoader});